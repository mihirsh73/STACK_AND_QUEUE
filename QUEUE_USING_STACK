  
    MyQueue() {
        
    }
    stack<int> s1;
    stack<int> s2;
    void push(int x) {
        s1.push(x);                     // push TC O(1)
    }

    // Removes the element from in front of queue.
    int pop() {
      if(s2.empty()==true)
      {
          while(s1.empty()==false)
          {
              s2.push(s1.top());          // pop TC O(1) AMORTIZED
              s1.pop();
          }
          
      }
        int ans = s2.top();
        s2.pop();
        return ans;
        
    }

    // Get the front element.
    int peek(void) {
        if(s2.empty()==true)
      {
          while(s1.empty()==false)
          {
              s2.push(s1.top());
              s1.pop();
          }
          
      }
        int ans = s2.top();
        return ans;
        
        
    }

    // Return whether the queue is empty.
    bool empty(void) {
       if(s1.size()==0 && s2.size()==0)
        {
            return true;
        }
        return false;
    }
};
